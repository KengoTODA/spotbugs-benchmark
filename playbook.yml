- name: Create a sandbox instance
  hosts: localhost
  gather_facts: False
  tasks:
    - name: create a new ec2 key pair
      ec2_key:
        name: "{{ key_name }}"
        region: "{{ region }}"
      register: key
    - name: save generated private key
      copy:
        content: "{{ key.key.private_key }}"
        dest: "./aws-private.pem"
        mode: "0600"
      when: key.changed
    - name: create a new security group
      ec2_group:
        name: "{{ security_group }}"
        description: To enable SSH
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22
    - name: Launch instance
      ec2:
         key_name: "{{ key_name }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         count: 1
      register: ec2
    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"
    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"
- name: Run benchmark
  hosts: launched
  gather_facts: True
  tasks:
    - name: Run benchmark script on remote instance
      become: False
      script: benchmark.sh
      register: result
    - name: Check stdout
      debug:
        msg: "{{ result.stdout }}"
    - name: Check stderr
      debug:
        msg: "{{ result.stderr }}"
- name: Clean up instances, security group and key pair
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Terminate instances that were previously launched
      ec2:
        state: absent
        instance_ids: "{{ ec2.instance_ids }}"
        wait: true
        region: "{{ region }}"
    - name: Delete security group
      ec2_group:
        state: absent
        name: "{{ security_group }}"
        region: "{{ region }}"
    - name: Delete key pair by name
      ec2_key:
        state: absent
        name: "{{ key_name }}"
        region: "{{ region }}"
